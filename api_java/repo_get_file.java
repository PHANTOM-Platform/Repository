package demo_phantom;
// This Java Class should return the TOKEN-string generated by the PHANTOM Repository for a specific user_id and user_pw
//
// Author: J.M.MontaÃ±ana HLRS 2018
// If you find any bug, please notify to hpcjmont@hlrs.de
// 
// Copyright (C) 2018 University of Stuttgart
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// 	http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import java.io.BufferedReader;
import java.io.DataOutputStream; 
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import static org.apache.http.HttpHeaders.USER_AGENT;

public class repo_get_file { 
	public static String request_repository_server(String table_ini,String token, String es_serveraddress, String es_serverport ) throws IOException {
		String table=table_ini.replaceAll(" ","%20");
		String retmonmetric = new String();		
		String urlString = new String();
		String responsestring = new String();
		int cnt=0;
		urlString = "http://"+es_serveraddress+":"+es_serverport+table;
 		System.out.println( "\nGET request to Repository using the url: "+urlString );
		URL httpurl = new URL(urlString);
		HttpURLConnection c = (HttpURLConnection)httpurl.openConnection();//connecting to url
		c.setRequestProperty( "Content-type", "application/x-www-form-urlencoded");
		c.setRequestProperty( "Accept", "*/*" ); 
		c.setRequestProperty("Authorization", "OAuth " + token);
		c.setRequestMethod("GET"); 
		BufferedReader in = new BufferedReader(new InputStreamReader(c.getInputStream()));//stream to resource
		String str;
		while ((str = in.readLine()) != null){ //reading data
			responsestring += str+"\n";//process the response and save it in some string or so
			cnt++;
		}
		in.close();//closing stream
		c.disconnect();
		return responsestring;
	} 

	public static void main(String[] args) throws IOException { 
		int firstArg;		
		if (args.length > 5) {
			String token			= args[0];
			String es_serveraddress	= args[1];
			String es_serverport	= args[2];			
			String project			= args[3];
			String source			= args[4];
			String filepath			= args[5];
			String filename			= args[6]; 
			String responsestring 	= request_repository_server("/download?project="+project+"&source=user&filepath="+filepath+"&filename="+filename, token, es_serveraddress, es_serverport);
			System.out.println(responsestring); //it returns the string token.
		}else{
			System.err.println("Missing arguments, please try:\n repo_get_file token filepath filename\n");
			System.exit(1);
		} 
	}
}

